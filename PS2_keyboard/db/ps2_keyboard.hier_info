|process_keyboard
CLOCK_50 => CLOCK_50.IN4
KEY[0] => counter_char[0].ACLR
KEY[0] => counter_char[1].ACLR
KEY[0] => counter_char[2].ACLR
KEY[0] => counter_char[3].ACLR
KEY[0] => reg_keyboard[7][0].ACLR
KEY[0] => reg_keyboard[7][1].ACLR
KEY[0] => reg_keyboard[7][2].ACLR
KEY[0] => reg_keyboard[7][3].ACLR
KEY[0] => reg_keyboard[7][4].ACLR
KEY[0] => reg_keyboard[7][5].ACLR
KEY[0] => reg_keyboard[7][6].ACLR
KEY[0] => reg_keyboard[7][7].ACLR
KEY[0] => reg_keyboard[6][0].ACLR
KEY[0] => reg_keyboard[6][1].ACLR
KEY[0] => reg_keyboard[6][2].ACLR
KEY[0] => reg_keyboard[6][3].ACLR
KEY[0] => reg_keyboard[6][4].ACLR
KEY[0] => reg_keyboard[6][5].ACLR
KEY[0] => reg_keyboard[6][6].ACLR
KEY[0] => reg_keyboard[6][7].ACLR
KEY[0] => reg_keyboard[5][0].ACLR
KEY[0] => reg_keyboard[5][1].ACLR
KEY[0] => reg_keyboard[5][2].ACLR
KEY[0] => reg_keyboard[5][3].ACLR
KEY[0] => reg_keyboard[5][4].ACLR
KEY[0] => reg_keyboard[5][5].ACLR
KEY[0] => reg_keyboard[5][6].ACLR
KEY[0] => reg_keyboard[5][7].ACLR
KEY[0] => reg_keyboard[4][0].ACLR
KEY[0] => reg_keyboard[4][1].ACLR
KEY[0] => reg_keyboard[4][2].ACLR
KEY[0] => reg_keyboard[4][3].ACLR
KEY[0] => reg_keyboard[4][4].ACLR
KEY[0] => reg_keyboard[4][5].ACLR
KEY[0] => reg_keyboard[4][6].ACLR
KEY[0] => reg_keyboard[4][7].ACLR
KEY[0] => reg_keyboard[3][0].ACLR
KEY[0] => reg_keyboard[3][1].ACLR
KEY[0] => reg_keyboard[3][2].ACLR
KEY[0] => reg_keyboard[3][3].ACLR
KEY[0] => reg_keyboard[3][4].ACLR
KEY[0] => reg_keyboard[3][5].ACLR
KEY[0] => reg_keyboard[3][6].ACLR
KEY[0] => reg_keyboard[3][7].ACLR
KEY[0] => reg_keyboard[2][0].ACLR
KEY[0] => reg_keyboard[2][1].ACLR
KEY[0] => reg_keyboard[2][2].ACLR
KEY[0] => reg_keyboard[2][3].ACLR
KEY[0] => reg_keyboard[2][4].ACLR
KEY[0] => reg_keyboard[2][5].ACLR
KEY[0] => reg_keyboard[2][6].ACLR
KEY[0] => reg_keyboard[2][7].ACLR
KEY[0] => reg_keyboard[1][0].ACLR
KEY[0] => reg_keyboard[1][1].ACLR
KEY[0] => reg_keyboard[1][2].ACLR
KEY[0] => reg_keyboard[1][3].ACLR
KEY[0] => reg_keyboard[1][4].ACLR
KEY[0] => reg_keyboard[1][5].ACLR
KEY[0] => reg_keyboard[1][6].ACLR
KEY[0] => reg_keyboard[1][7].ACLR
KEY[0] => reg_keyboard[0][0].ACLR
KEY[0] => reg_keyboard[0][1].ACLR
KEY[0] => reg_keyboard[0][2].ACLR
KEY[0] => reg_keyboard[0][3].ACLR
KEY[0] => reg_keyboard[0][4].ACLR
KEY[0] => reg_keyboard[0][5].ACLR
KEY[0] => reg_keyboard[0][6].ACLR
KEY[0] => reg_keyboard[0][7].ACLR
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
HEX0[0] <= hex_7seg:dsp0.port1
HEX0[1] <= hex_7seg:dsp0.port1
HEX0[2] <= hex_7seg:dsp0.port1
HEX0[3] <= hex_7seg:dsp0.port1
HEX0[4] <= hex_7seg:dsp0.port1
HEX0[5] <= hex_7seg:dsp0.port1
HEX0[6] <= hex_7seg:dsp0.port1
HEX1[0] <= hex_7seg:dsp1.port1
HEX1[1] <= hex_7seg:dsp1.port1
HEX1[2] <= hex_7seg:dsp1.port1
HEX1[3] <= hex_7seg:dsp1.port1
HEX1[4] <= hex_7seg:dsp1.port1
HEX1[5] <= hex_7seg:dsp1.port1
HEX1[6] <= hex_7seg:dsp1.port1
HEX2[0] <= hex_7seg:dsp2.port1
HEX2[1] <= hex_7seg:dsp2.port1
HEX2[2] <= hex_7seg:dsp2.port1
HEX2[3] <= hex_7seg:dsp2.port1
HEX2[4] <= hex_7seg:dsp2.port1
HEX2[5] <= hex_7seg:dsp2.port1
HEX2[6] <= hex_7seg:dsp2.port1
HEX3[0] <= hex_7seg:dsp3.port1
HEX3[1] <= hex_7seg:dsp3.port1
HEX3[2] <= hex_7seg:dsp3.port1
HEX3[3] <= hex_7seg:dsp3.port1
HEX3[4] <= hex_7seg:dsp3.port1
HEX3[5] <= hex_7seg:dsp3.port1
HEX3[6] <= hex_7seg:dsp3.port1
HEX4[0] <= hex_7seg:dsp4.port1
HEX4[1] <= hex_7seg:dsp4.port1
HEX4[2] <= hex_7seg:dsp4.port1
HEX4[3] <= hex_7seg:dsp4.port1
HEX4[4] <= hex_7seg:dsp4.port1
HEX4[5] <= hex_7seg:dsp4.port1
HEX4[6] <= hex_7seg:dsp4.port1
HEX5[0] <= hex_7seg:dsp5.port1
HEX5[1] <= hex_7seg:dsp5.port1
HEX5[2] <= hex_7seg:dsp5.port1
HEX5[3] <= hex_7seg:dsp5.port1
HEX5[4] <= hex_7seg:dsp5.port1
HEX5[5] <= hex_7seg:dsp5.port1
HEX5[6] <= hex_7seg:dsp5.port1
HEX6[0] <= hex_7seg:dsp6.port1
HEX6[1] <= hex_7seg:dsp6.port1
HEX6[2] <= hex_7seg:dsp6.port1
HEX6[3] <= hex_7seg:dsp6.port1
HEX6[4] <= hex_7seg:dsp6.port1
HEX6[5] <= hex_7seg:dsp6.port1
HEX6[6] <= hex_7seg:dsp6.port1
HEX7[0] <= hex_7seg:dsp7.port1
HEX7[1] <= hex_7seg:dsp7.port1
HEX7[2] <= hex_7seg:dsp7.port1
HEX7[3] <= hex_7seg:dsp7.port1
HEX7[4] <= hex_7seg:dsp7.port1
HEX7[5] <= hex_7seg:dsp7.port1
HEX7[6] <= hex_7seg:dsp7.port1
LEDG[0] <= <GND>
LEDG[1] <= <GND>
LEDG[2] <= <GND>
LEDG[3] <= <GND>
LEDG[4] <= <GND>
LEDG[5] <= <GND>
LEDG[6] <= <GND>
LEDG[7] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[8] <= <GND>
PS2_DAT => PS2_DAT.IN1
PS2_CLK => PS2_CLK.IN1
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_RW <= LCD_Display:u1.LCD_RW
LCD_EN <= LCD_Display:u1.LCD_E
LCD_RS <= LCD_Display:u1.LCD_RS
LCD_DATA[0] <> LCD_Display:u1.DATA_BUS
LCD_DATA[1] <> LCD_Display:u1.DATA_BUS
LCD_DATA[2] <> LCD_Display:u1.DATA_BUS
LCD_DATA[3] <> LCD_Display:u1.DATA_BUS
LCD_DATA[4] <> LCD_Display:u1.DATA_BUS
LCD_DATA[5] <> LCD_Display:u1.DATA_BUS
LCD_DATA[6] <> LCD_Display:u1.DATA_BUS
LCD_DATA[7] <> LCD_Display:u1.DATA_BUS


|process_keyboard|oneshot:pulser
pulse_out <= pulse_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
trigger_in => always0.IN1
trigger_in => delay.DATAIN
clk => delay.CLK
clk => pulse_out~reg0.CLK


|process_keyboard|keyboard:kbd
keyboard_clk => filter[7].DATAIN
keyboard_data => shiftin.DATAB
keyboard_data => always3.IN1
clock50 => clock.CLK
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => read_char.OUTPUTSELECT
reset => scan_code[1]~reg0.ENA
reset => scan_code[0]~reg0.ENA
reset => scan_code[2]~reg0.ENA
reset => scan_code[3]~reg0.ENA
reset => scan_code[4]~reg0.ENA
reset => scan_code[5]~reg0.ENA
reset => scan_code[6]~reg0.ENA
reset => scan_code[7]~reg0.ENA
reset => shiftin[0].ENA
reset => shiftin[1].ENA
reset => shiftin[2].ENA
reset => shiftin[3].ENA
reset => shiftin[4].ENA
reset => shiftin[5].ENA
reset => shiftin[6].ENA
reset => shiftin[7].ENA
reset => shiftin[8].ENA
reset => ready_set.ENA
read => scan_ready~reg0.ACLR
scan_ready <= scan_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[0] <= scan_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[1] <= scan_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[2] <= scan_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[3] <= scan_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[4] <= scan_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[5] <= scan_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[6] <= scan_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[7] <= scan_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|Reset_Delay:r0
iCLK => oRESET~reg0.CLK
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => Cont[5].CLK
iCLK => Cont[6].CLK
iCLK => Cont[7].CLK
iCLK => Cont[8].CLK
iCLK => Cont[9].CLK
iCLK => Cont[10].CLK
iCLK => Cont[11].CLK
iCLK => Cont[12].CLK
iCLK => Cont[13].CLK
iCLK => Cont[14].CLK
iCLK => Cont[15].CLK
iCLK => Cont[16].CLK
iCLK => Cont[17].CLK
iCLK => Cont[18].CLK
iCLK => Cont[19].CLK
oRESET <= oRESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|LCD_Display:u1
iCLK_50MHZ => CLK_400HZ.CLK
iCLK_50MHZ => CLK_COUNT_400HZ[0].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[1].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[2].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[3].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[4].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[5].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[6].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[7].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[8].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[9].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[10].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[11].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[12].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[13].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[14].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[15].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[16].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[17].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[18].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[19].CLK
iRST_N => CHAR_COUNT[0].OUTPUTSELECT
iRST_N => CHAR_COUNT[1].OUTPUTSELECT
iRST_N => CHAR_COUNT[2].OUTPUTSELECT
iRST_N => CHAR_COUNT[3].OUTPUTSELECT
iRST_N => CHAR_COUNT[4].OUTPUTSELECT
iRST_N => next_command.DISPLAY_CLEAR.OUTPUTSELECT
iRST_N => next_command.DISPLAY_OFF.OUTPUTSELECT
iRST_N => next_command.RESET3.OUTPUTSELECT
iRST_N => next_command.RESET2.OUTPUTSELECT
iRST_N => next_command.RETURN_HOME.OUTPUTSELECT
iRST_N => next_command.LINE2.OUTPUTSELECT
iRST_N => next_command.Print_String.OUTPUTSELECT
iRST_N => next_command.MODE_SET.OUTPUTSELECT
iRST_N => next_command.DISPLAY_ON.OUTPUTSELECT
iRST_N => next_command.FUNC_SET.OUTPUTSELECT
iRST_N => CLK_400HZ.ACLR
iRST_N => CLK_COUNT_400HZ[0].ACLR
iRST_N => CLK_COUNT_400HZ[1].ACLR
iRST_N => CLK_COUNT_400HZ[2].ACLR
iRST_N => CLK_COUNT_400HZ[3].ACLR
iRST_N => CLK_COUNT_400HZ[4].ACLR
iRST_N => CLK_COUNT_400HZ[5].ACLR
iRST_N => CLK_COUNT_400HZ[6].ACLR
iRST_N => CLK_COUNT_400HZ[7].ACLR
iRST_N => CLK_COUNT_400HZ[8].ACLR
iRST_N => CLK_COUNT_400HZ[9].ACLR
iRST_N => CLK_COUNT_400HZ[10].ACLR
iRST_N => CLK_COUNT_400HZ[11].ACLR
iRST_N => CLK_COUNT_400HZ[12].ACLR
iRST_N => CLK_COUNT_400HZ[13].ACLR
iRST_N => CLK_COUNT_400HZ[14].ACLR
iRST_N => CLK_COUNT_400HZ[15].ACLR
iRST_N => CLK_COUNT_400HZ[16].ACLR
iRST_N => CLK_COUNT_400HZ[17].ACLR
iRST_N => CLK_COUNT_400HZ[18].ACLR
iRST_N => CLK_COUNT_400HZ[19].ACLR
iRST_N => state~13.DATAIN
iRST_N => LCD_E~reg0.ENA
iRST_N => LCD_RS~reg0.ENA
iRST_N => LCD_RW_INT.ENA
iRST_N => DATA_BUS_VALUE[7].ENA
iRST_N => DATA_BUS_VALUE[6].ENA
iRST_N => DATA_BUS_VALUE[5].ENA
iRST_N => DATA_BUS_VALUE[4].ENA
iRST_N => DATA_BUS_VALUE[3].ENA
iRST_N => DATA_BUS_VALUE[2].ENA
iRST_N => DATA_BUS_VALUE[1].ENA
iRST_N => DATA_BUS_VALUE[0].ENA
char0[0] => char0[0].IN1
char0[1] => char0[1].IN1
char0[2] => char0[2].IN1
char0[3] => char0[3].IN1
char0[4] => char0[4].IN1
char0[5] => char0[5].IN1
char0[6] => char0[6].IN1
char0[7] => char0[7].IN1
char1[0] => char1[0].IN1
char1[1] => char1[1].IN1
char1[2] => char1[2].IN1
char1[3] => char1[3].IN1
char1[4] => char1[4].IN1
char1[5] => char1[5].IN1
char1[6] => char1[6].IN1
char1[7] => char1[7].IN1
char2[0] => char2[0].IN1
char2[1] => char2[1].IN1
char2[2] => char2[2].IN1
char2[3] => char2[3].IN1
char2[4] => char2[4].IN1
char2[5] => char2[5].IN1
char2[6] => char2[6].IN1
char2[7] => char2[7].IN1
char3[0] => char3[0].IN1
char3[1] => char3[1].IN1
char3[2] => char3[2].IN1
char3[3] => char3[3].IN1
char3[4] => char3[4].IN1
char3[5] => char3[5].IN1
char3[6] => char3[6].IN1
char3[7] => char3[7].IN1
char4[0] => char4[0].IN1
char4[1] => char4[1].IN1
char4[2] => char4[2].IN1
char4[3] => char4[3].IN1
char4[4] => char4[4].IN1
char4[5] => char4[5].IN1
char4[6] => char4[6].IN1
char4[7] => char4[7].IN1
char5[0] => char5[0].IN1
char5[1] => char5[1].IN1
char5[2] => char5[2].IN1
char5[3] => char5[3].IN1
char5[4] => char5[4].IN1
char5[5] => char5[5].IN1
char5[6] => char5[6].IN1
char5[7] => char5[7].IN1
char6[0] => char6[0].IN1
char6[1] => char6[1].IN1
char6[2] => char6[2].IN1
char6[3] => char6[3].IN1
char6[4] => char6[4].IN1
char6[5] => char6[5].IN1
char6[6] => char6[6].IN1
char6[7] => char6[7].IN1
char7[0] => char7[0].IN1
char7[1] => char7[1].IN1
char7[2] => char7[2].IN1
char7[3] => char7[3].IN1
char7[4] => char7[4].IN1
char7[5] => char7[5].IN1
char7[6] => char7[6].IN1
char7[7] => char7[7].IN1
LCD_RS <= LCD_RS~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_E <= LCD_E~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[0] <> DATA_BUS[0]
DATA_BUS[1] <> DATA_BUS[1]
DATA_BUS[2] <> DATA_BUS[2]
DATA_BUS[3] <> DATA_BUS[3]
DATA_BUS[4] <> DATA_BUS[4]
DATA_BUS[5] <> DATA_BUS[5]
DATA_BUS[6] <> DATA_BUS[6]
DATA_BUS[7] <> DATA_BUS[7]


|process_keyboard|LCD_Display:u1|LCD_display_string:u1
index[0] => Mux0.IN28
index[0] => Mux1.IN28
index[0] => Mux2.IN28
index[0] => Mux3.IN28
index[0] => Mux4.IN28
index[0] => Mux5.IN28
index[0] => Mux6.IN28
index[0] => Mux7.IN28
index[1] => Mux0.IN27
index[1] => Mux1.IN27
index[1] => Mux2.IN27
index[1] => Mux3.IN27
index[1] => Mux4.IN27
index[1] => Mux5.IN27
index[1] => Mux6.IN27
index[1] => Mux7.IN27
index[2] => Mux0.IN26
index[2] => Mux1.IN26
index[2] => Mux2.IN26
index[2] => Mux3.IN26
index[2] => Mux4.IN26
index[2] => Mux5.IN26
index[2] => Mux6.IN26
index[2] => Mux7.IN26
index[3] => Mux0.IN25
index[3] => Mux1.IN25
index[3] => Mux2.IN25
index[3] => Mux3.IN25
index[3] => Mux4.IN25
index[3] => Mux5.IN25
index[3] => Mux6.IN25
index[3] => Mux7.IN25
index[4] => Mux0.IN24
index[4] => Mux1.IN24
index[4] => Mux2.IN24
index[4] => Mux3.IN24
index[4] => Mux4.IN24
index[4] => Mux5.IN24
index[4] => Mux6.IN24
index[4] => Mux7.IN24
out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
char0[0] => Mux7.IN29
char0[1] => Mux6.IN29
char0[2] => Mux5.IN29
char0[3] => Mux4.IN29
char0[4] => Mux3.IN29
char0[5] => Mux2.IN29
char0[6] => Mux1.IN29
char0[7] => Mux0.IN29
char1[0] => Mux7.IN30
char1[1] => Mux6.IN30
char1[2] => Mux5.IN30
char1[3] => Mux4.IN30
char1[4] => Mux3.IN30
char1[5] => Mux2.IN30
char1[6] => Mux1.IN30
char1[7] => Mux0.IN30
char2[0] => Mux7.IN31
char2[1] => Mux6.IN31
char2[2] => Mux5.IN31
char2[3] => Mux4.IN31
char2[4] => Mux3.IN31
char2[5] => Mux2.IN31
char2[6] => Mux1.IN31
char2[7] => Mux0.IN31
char3[0] => Mux7.IN32
char3[1] => Mux6.IN32
char3[2] => Mux5.IN32
char3[3] => Mux4.IN32
char3[4] => Mux3.IN32
char3[5] => Mux2.IN32
char3[6] => Mux1.IN32
char3[7] => Mux0.IN32
char4[0] => Mux7.IN33
char4[1] => Mux6.IN33
char4[2] => Mux5.IN33
char4[3] => Mux4.IN33
char4[4] => Mux3.IN33
char4[5] => Mux2.IN33
char4[6] => Mux1.IN33
char4[7] => Mux0.IN33
char5[0] => Mux7.IN34
char5[1] => Mux6.IN34
char5[2] => Mux5.IN34
char5[3] => Mux4.IN34
char5[4] => Mux3.IN34
char5[5] => Mux2.IN34
char5[6] => Mux1.IN34
char5[7] => Mux0.IN34
char6[0] => Mux7.IN35
char6[1] => Mux6.IN35
char6[2] => Mux5.IN35
char6[3] => Mux4.IN35
char6[4] => Mux3.IN35
char6[5] => Mux2.IN35
char6[6] => Mux1.IN35
char6[7] => Mux0.IN35
char7[0] => Mux7.IN36
char7[1] => Mux6.IN36
char7[2] => Mux5.IN36
char7[3] => Mux4.IN36
char7[4] => Mux3.IN36
char7[5] => Mux2.IN36
char7[6] => Mux1.IN36
char7[7] => Mux0.IN36


|process_keyboard|hex_7seg:dsp0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp2
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp3
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp4
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp5
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp6
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|process_keyboard|hex_7seg:dsp7
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


